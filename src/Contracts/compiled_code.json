{"contracts": {"global_board.sol": {"Global_Board": {"abi": [{"inputs": [{"internalType": "string", "name": "_msg", "type": "string"}], "stateMutability": "nonpayable", "type": "constructor"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "addressToMsg", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "msgs", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "recive", "outputs": [{"internalType": "string[]", "name": "", "type": "string[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "string", "name": "_msg", "type": "string"}], "name": "record", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "evm": {"bytecode": {"generatedSources": [{"ast": {"nodeType": "YulBlock", "src": "0:2705:1", "statements": [{"body": {"nodeType": "YulBlock", "src": "102:258:1", "statements": [{"nodeType": "YulAssignment", "src": "112:74:1", "value": {"arguments": [{"arguments": [{"name": "length", "nodeType": "YulIdentifier", "src": "178:6:1"}], "functionName": {"name": "array_allocation_size_t_string_memory_ptr", "nodeType": "YulIdentifier", "src": "136:41:1"}, "nodeType": "YulFunctionCall", "src": "136:49:1"}], "functionName": {"name": "allocateMemory", "nodeType": "YulIdentifier", "src": "121:14:1"}, "nodeType": "YulFunctionCall", "src": "121:65:1"}, "variableNames": [{"name": "array", "nodeType": "YulIdentifier", "src": "112:5:1"}]}, {"expression": {"arguments": [{"name": "array", "nodeType": "YulIdentifier", "src": "202:5:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "209:6:1"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "195:6:1"}, "nodeType": "YulFunctionCall", "src": "195:21:1"}, "nodeType": "YulExpressionStatement", "src": "195:21:1"}, {"nodeType": "YulVariableDeclaration", "src": "225:27:1", "value": {"arguments": [{"name": "array", "nodeType": "YulIdentifier", "src": "240:5:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "247:4:1", "type": "", "value": "0x20"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "236:3:1"}, "nodeType": "YulFunctionCall", "src": "236:16:1"}, "variables": [{"name": "dst", "nodeType": "YulTypedName", "src": "229:3:1", "type": ""}]}, {"body": {"nodeType": "YulBlock", "src": "290:16:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "299:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "302:1:1", "type": "", "value": "0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "292:6:1"}, "nodeType": "YulFunctionCall", "src": "292:12:1"}, "nodeType": "YulExpressionStatement", "src": "292:12:1"}]}, "condition": {"arguments": [{"arguments": [{"name": "src", "nodeType": "YulIdentifier", "src": "271:3:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "276:6:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "267:3:1"}, "nodeType": "YulFunctionCall", "src": "267:16:1"}, {"name": "end", "nodeType": "YulIdentifier", "src": "285:3:1"}], "functionName": {"name": "gt", "nodeType": "YulIdentifier", "src": "264:2:1"}, "nodeType": "YulFunctionCall", "src": "264:25:1"}, "nodeType": "YulIf", "src": "261:2:1"}, {"expression": {"arguments": [{"name": "src", "nodeType": "YulIdentifier", "src": "337:3:1"}, {"name": "dst", "nodeType": "YulIdentifier", "src": "342:3:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "347:6:1"}], "functionName": {"name": "copy_memory_to_memory", "nodeType": "YulIdentifier", "src": "315:21:1"}, "nodeType": "YulFunctionCall", "src": "315:39:1"}, "nodeType": "YulExpressionStatement", "src": "315:39:1"}]}, "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "src", "nodeType": "YulTypedName", "src": "75:3:1", "type": ""}, {"name": "length", "nodeType": "YulTypedName", "src": "80:6:1", "type": ""}, {"name": "end", "nodeType": "YulTypedName", "src": "88:3:1", "type": ""}], "returnVariables": [{"name": "array", "nodeType": "YulTypedName", "src": "96:5:1", "type": ""}], "src": "7:353:1"}, {"body": {"nodeType": "YulBlock", "src": "453:215:1", "statements": [{"body": {"nodeType": "YulBlock", "src": "502:16:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "511:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "514:1:1", "type": "", "value": "0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "504:6:1"}, "nodeType": "YulFunctionCall", "src": "504:12:1"}, "nodeType": "YulExpressionStatement", "src": "504:12:1"}]}, "condition": {"arguments": [{"arguments": [{"arguments": [{"name": "offset", "nodeType": "YulIdentifier", "src": "481:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "489:4:1", "type": "", "value": "0x1f"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "477:3:1"}, "nodeType": "YulFunctionCall", "src": "477:17:1"}, {"name": "end", "nodeType": "YulIdentifier", "src": "496:3:1"}], "functionName": {"name": "slt", "nodeType": "YulIdentifier", "src": "473:3:1"}, "nodeType": "YulFunctionCall", "src": "473:27:1"}], "functionName": {"name": "iszero", "nodeType": "YulIdentifier", "src": "466:6:1"}, "nodeType": "YulFunctionCall", "src": "466:35:1"}, "nodeType": "YulIf", "src": "463:2:1"}, {"nodeType": "YulVariableDeclaration", "src": "527:27:1", "value": {"arguments": [{"name": "offset", "nodeType": "YulIdentifier", "src": "547:6:1"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "541:5:1"}, "nodeType": "YulFunctionCall", "src": "541:13:1"}, "variables": [{"name": "length", "nodeType": "YulTypedName", "src": "531:6:1", "type": ""}]}, {"nodeType": "YulAssignment", "src": "563:99:1", "value": {"arguments": [{"arguments": [{"name": "offset", "nodeType": "YulIdentifier", "src": "635:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "643:4:1", "type": "", "value": "0x20"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "631:3:1"}, "nodeType": "YulFunctionCall", "src": "631:17:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "650:6:1"}, {"name": "end", "nodeType": "YulIdentifier", "src": "658:3:1"}], "functionName": {"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory", "nodeType": "YulIdentifier", "src": "572:58:1"}, "nodeType": "YulFunctionCall", "src": "572:90:1"}, "variableNames": [{"name": "array", "nodeType": "YulIdentifier", "src": "563:5:1"}]}]}, "name": "abi_decode_t_string_memory_ptr_fromMemory", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "offset", "nodeType": "YulTypedName", "src": "431:6:1", "type": ""}, {"name": "end", "nodeType": "YulTypedName", "src": "439:3:1", "type": ""}], "returnVariables": [{"name": "array", "nodeType": "YulTypedName", "src": "447:5:1", "type": ""}], "src": "380:288:1"}, {"body": {"nodeType": "YulBlock", "src": "761:303:1", "statements": [{"body": {"nodeType": "YulBlock", "src": "807:16:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "816:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "819:1:1", "type": "", "value": "0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "809:6:1"}, "nodeType": "YulFunctionCall", "src": "809:12:1"}, "nodeType": "YulExpressionStatement", "src": "809:12:1"}]}, "condition": {"arguments": [{"arguments": [{"name": "dataEnd", "nodeType": "YulIdentifier", "src": "782:7:1"}, {"name": "headStart", "nodeType": "YulIdentifier", "src": "791:9:1"}], "functionName": {"name": "sub", "nodeType": "YulIdentifier", "src": "778:3:1"}, "nodeType": "YulFunctionCall", "src": "778:23:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "803:2:1", "type": "", "value": "32"}], "functionName": {"name": "slt", "nodeType": "YulIdentifier", "src": "774:3:1"}, "nodeType": "YulFunctionCall", "src": "774:32:1"}, "nodeType": "YulIf", "src": "771:2:1"}, {"nodeType": "YulBlock", "src": "833:224:1", "statements": [{"nodeType": "YulVariableDeclaration", "src": "848:38:1", "value": {"arguments": [{"arguments": [{"name": "headStart", "nodeType": "YulIdentifier", "src": "872:9:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "883:1:1", "type": "", "value": "0"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "868:3:1"}, "nodeType": "YulFunctionCall", "src": "868:17:1"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "862:5:1"}, "nodeType": "YulFunctionCall", "src": "862:24:1"}, "variables": [{"name": "offset", "nodeType": "YulTypedName", "src": "852:6:1", "type": ""}]}, {"body": {"nodeType": "YulBlock", "src": "933:16:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "942:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "945:1:1", "type": "", "value": "0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "935:6:1"}, "nodeType": "YulFunctionCall", "src": "935:12:1"}, "nodeType": "YulExpressionStatement", "src": "935:12:1"}]}, "condition": {"arguments": [{"name": "offset", "nodeType": "YulIdentifier", "src": "905:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "913:18:1", "type": "", "value": "0xffffffffffffffff"}], "functionName": {"name": "gt", "nodeType": "YulIdentifier", "src": "902:2:1"}, "nodeType": "YulFunctionCall", "src": "902:30:1"}, "nodeType": "YulIf", "src": "899:2:1"}, {"nodeType": "YulAssignment", "src": "963:84:1", "value": {"arguments": [{"arguments": [{"name": "headStart", "nodeType": "YulIdentifier", "src": "1019:9:1"}, {"name": "offset", "nodeType": "YulIdentifier", "src": "1030:6:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1015:3:1"}, "nodeType": "YulFunctionCall", "src": "1015:22:1"}, {"name": "dataEnd", "nodeType": "YulIdentifier", "src": "1039:7:1"}], "functionName": {"name": "abi_decode_t_string_memory_ptr_fromMemory", "nodeType": "YulIdentifier", "src": "973:41:1"}, "nodeType": "YulFunctionCall", "src": "973:74:1"}, "variableNames": [{"name": "value0", "nodeType": "YulIdentifier", "src": "963:6:1"}]}]}]}, "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "headStart", "nodeType": "YulTypedName", "src": "731:9:1", "type": ""}, {"name": "dataEnd", "nodeType": "YulTypedName", "src": "742:7:1", "type": ""}], "returnVariables": [{"name": "value0", "nodeType": "YulTypedName", "src": "754:6:1", "type": ""}], "src": "674:390:1"}, {"body": {"nodeType": "YulBlock", "src": "1110:243:1", "statements": [{"nodeType": "YulAssignment", "src": "1120:19:1", "value": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "1136:2:1", "type": "", "value": "64"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "1130:5:1"}, "nodeType": "YulFunctionCall", "src": "1130:9:1"}, "variableNames": [{"name": "memPtr", "nodeType": "YulIdentifier", "src": "1120:6:1"}]}, {"nodeType": "YulVariableDeclaration", "src": "1148:35:1", "value": {"arguments": [{"name": "memPtr", "nodeType": "YulIdentifier", "src": "1170:6:1"}, {"name": "size", "nodeType": "YulIdentifier", "src": "1178:4:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1166:3:1"}, "nodeType": "YulFunctionCall", "src": "1166:17:1"}, "variables": [{"name": "newFreePtr", "nodeType": "YulTypedName", "src": "1152:10:1", "type": ""}]}, {"body": {"nodeType": "YulBlock", "src": "1294:22:1", "statements": [{"expression": {"arguments": [], "functionName": {"name": "panic_error_0x41", "nodeType": "YulIdentifier", "src": "1296:16:1"}, "nodeType": "YulFunctionCall", "src": "1296:18:1"}, "nodeType": "YulExpressionStatement", "src": "1296:18:1"}]}, "condition": {"arguments": [{"arguments": [{"name": "newFreePtr", "nodeType": "YulIdentifier", "src": "1237:10:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1249:18:1", "type": "", "value": "0xffffffffffffffff"}], "functionName": {"name": "gt", "nodeType": "YulIdentifier", "src": "1234:2:1"}, "nodeType": "YulFunctionCall", "src": "1234:34:1"}, {"arguments": [{"name": "newFreePtr", "nodeType": "YulIdentifier", "src": "1273:10:1"}, {"name": "memPtr", "nodeType": "YulIdentifier", "src": "1285:6:1"}], "functionName": {"name": "lt", "nodeType": "YulIdentifier", "src": "1270:2:1"}, "nodeType": "YulFunctionCall", "src": "1270:22:1"}], "functionName": {"name": "or", "nodeType": "YulIdentifier", "src": "1231:2:1"}, "nodeType": "YulFunctionCall", "src": "1231:62:1"}, "nodeType": "YulIf", "src": "1228:2:1"}, {"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "1332:2:1", "type": "", "value": "64"}, {"name": "newFreePtr", "nodeType": "YulIdentifier", "src": "1336:10:1"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "1325:6:1"}, "nodeType": "YulFunctionCall", "src": "1325:22:1"}, "nodeType": "YulExpressionStatement", "src": "1325:22:1"}]}, "name": "allocateMemory", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "size", "nodeType": "YulTypedName", "src": "1094:4:1", "type": ""}], "returnVariables": [{"name": "memPtr", "nodeType": "YulTypedName", "src": "1103:6:1", "type": ""}], "src": "1070:283:1"}, {"body": {"nodeType": "YulBlock", "src": "1426:265:1", "statements": [{"body": {"nodeType": "YulBlock", "src": "1531:22:1", "statements": [{"expression": {"arguments": [], "functionName": {"name": "panic_error_0x41", "nodeType": "YulIdentifier", "src": "1533:16:1"}, "nodeType": "YulFunctionCall", "src": "1533:18:1"}, "nodeType": "YulExpressionStatement", "src": "1533:18:1"}]}, "condition": {"arguments": [{"name": "length", "nodeType": "YulIdentifier", "src": "1503:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1511:18:1", "type": "", "value": "0xffffffffffffffff"}], "functionName": {"name": "gt", "nodeType": "YulIdentifier", "src": "1500:2:1"}, "nodeType": "YulFunctionCall", "src": "1500:30:1"}, "nodeType": "YulIf", "src": "1497:2:1"}, {"nodeType": "YulAssignment", "src": "1583:41:1", "value": {"arguments": [{"arguments": [{"name": "length", "nodeType": "YulIdentifier", "src": "1599:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1607:4:1", "type": "", "value": "0x1f"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1595:3:1"}, "nodeType": "YulFunctionCall", "src": "1595:17:1"}, {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "1618:4:1", "type": "", "value": "0x1f"}], "functionName": {"name": "not", "nodeType": "YulIdentifier", "src": "1614:3:1"}, "nodeType": "YulFunctionCall", "src": "1614:9:1"}], "functionName": {"name": "and", "nodeType": "YulIdentifier", "src": "1591:3:1"}, "nodeType": "YulFunctionCall", "src": "1591:33:1"}, "variableNames": [{"name": "size", "nodeType": "YulIdentifier", "src": "1583:4:1"}]}, {"nodeType": "YulAssignment", "src": "1661:23:1", "value": {"arguments": [{"name": "size", "nodeType": "YulIdentifier", "src": "1673:4:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1679:4:1", "type": "", "value": "0x20"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1669:3:1"}, "nodeType": "YulFunctionCall", "src": "1669:15:1"}, "variableNames": [{"name": "size", "nodeType": "YulIdentifier", "src": "1661:4:1"}]}]}, "name": "array_allocation_size_t_string_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "length", "nodeType": "YulTypedName", "src": "1410:6:1", "type": ""}], "returnVariables": [{"name": "size", "nodeType": "YulTypedName", "src": "1421:4:1", "type": ""}], "src": "1359:332:1"}, {"body": {"nodeType": "YulBlock", "src": "1746:258:1", "statements": [{"nodeType": "YulVariableDeclaration", "src": "1756:10:1", "value": {"kind": "number", "nodeType": "YulLiteral", "src": "1765:1:1", "type": "", "value": "0"}, "variables": [{"name": "i", "nodeType": "YulTypedName", "src": "1760:1:1", "type": ""}]}, {"body": {"nodeType": "YulBlock", "src": "1825:63:1", "statements": [{"expression": {"arguments": [{"arguments": [{"name": "dst", "nodeType": "YulIdentifier", "src": "1850:3:1"}, {"name": "i", "nodeType": "YulIdentifier", "src": "1855:1:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1846:3:1"}, "nodeType": "YulFunctionCall", "src": "1846:11:1"}, {"arguments": [{"arguments": [{"name": "src", "nodeType": "YulIdentifier", "src": "1869:3:1"}, {"name": "i", "nodeType": "YulIdentifier", "src": "1874:1:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1865:3:1"}, "nodeType": "YulFunctionCall", "src": "1865:11:1"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "1859:5:1"}, "nodeType": "YulFunctionCall", "src": "1859:18:1"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "1839:6:1"}, "nodeType": "YulFunctionCall", "src": "1839:39:1"}, "nodeType": "YulExpressionStatement", "src": "1839:39:1"}]}, "condition": {"arguments": [{"name": "i", "nodeType": "YulIdentifier", "src": "1786:1:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "1789:6:1"}], "functionName": {"name": "lt", "nodeType": "YulIdentifier", "src": "1783:2:1"}, "nodeType": "YulFunctionCall", "src": "1783:13:1"}, "nodeType": "YulForLoop", "post": {"nodeType": "YulBlock", "src": "1797:19:1", "statements": [{"nodeType": "YulAssignment", "src": "1799:15:1", "value": {"arguments": [{"name": "i", "nodeType": "YulIdentifier", "src": "1808:1:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1811:2:1", "type": "", "value": "32"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1804:3:1"}, "nodeType": "YulFunctionCall", "src": "1804:10:1"}, "variableNames": [{"name": "i", "nodeType": "YulIdentifier", "src": "1799:1:1"}]}]}, "pre": {"nodeType": "YulBlock", "src": "1779:3:1", "statements": []}, "src": "1775:113:1"}, {"body": {"nodeType": "YulBlock", "src": "1922:76:1", "statements": [{"expression": {"arguments": [{"arguments": [{"name": "dst", "nodeType": "YulIdentifier", "src": "1972:3:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "1977:6:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1968:3:1"}, "nodeType": "YulFunctionCall", "src": "1968:16:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1986:1:1", "type": "", "value": "0"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "1961:6:1"}, "nodeType": "YulFunctionCall", "src": "1961:27:1"}, "nodeType": "YulExpressionStatement", "src": "1961:27:1"}]}, "condition": {"arguments": [{"name": "i", "nodeType": "YulIdentifier", "src": "1903:1:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "1906:6:1"}], "functionName": {"name": "gt", "nodeType": "YulIdentifier", "src": "1900:2:1"}, "nodeType": "YulFunctionCall", "src": "1900:13:1"}, "nodeType": "YulIf", "src": "1897:2:1"}]}, "name": "copy_memory_to_memory", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "src", "nodeType": "YulTypedName", "src": "1728:3:1", "type": ""}, {"name": "dst", "nodeType": "YulTypedName", "src": "1733:3:1", "type": ""}, {"name": "length", "nodeType": "YulTypedName", "src": "1738:6:1", "type": ""}], "src": "1697:307:1"}, {"body": {"nodeType": "YulBlock", "src": "2061:269:1", "statements": [{"nodeType": "YulAssignment", "src": "2071:22:1", "value": {"arguments": [{"name": "data", "nodeType": "YulIdentifier", "src": "2085:4:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2091:1:1", "type": "", "value": "2"}], "functionName": {"name": "div", "nodeType": "YulIdentifier", "src": "2081:3:1"}, "nodeType": "YulFunctionCall", "src": "2081:12:1"}, "variableNames": [{"name": "length", "nodeType": "YulIdentifier", "src": "2071:6:1"}]}, {"nodeType": "YulVariableDeclaration", "src": "2102:38:1", "value": {"arguments": [{"name": "data", "nodeType": "YulIdentifier", "src": "2132:4:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2138:1:1", "type": "", "value": "1"}], "functionName": {"name": "and", "nodeType": "YulIdentifier", "src": "2128:3:1"}, "nodeType": "YulFunctionCall", "src": "2128:12:1"}, "variables": [{"name": "outOfPlaceEncoding", "nodeType": "YulTypedName", "src": "2106:18:1", "type": ""}]}, {"body": {"nodeType": "YulBlock", "src": "2179:51:1", "statements": [{"nodeType": "YulAssignment", "src": "2193:27:1", "value": {"arguments": [{"name": "length", "nodeType": "YulIdentifier", "src": "2207:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2215:4:1", "type": "", "value": "0x7f"}], "functionName": {"name": "and", "nodeType": "YulIdentifier", "src": "2203:3:1"}, "nodeType": "YulFunctionCall", "src": "2203:17:1"}, "variableNames": [{"name": "length", "nodeType": "YulIdentifier", "src": "2193:6:1"}]}]}, "condition": {"arguments": [{"name": "outOfPlaceEncoding", "nodeType": "YulIdentifier", "src": "2159:18:1"}], "functionName": {"name": "iszero", "nodeType": "YulIdentifier", "src": "2152:6:1"}, "nodeType": "YulFunctionCall", "src": "2152:26:1"}, "nodeType": "YulIf", "src": "2149:2:1"}, {"body": {"nodeType": "YulBlock", "src": "2282:42:1", "statements": [{"expression": {"arguments": [], "functionName": {"name": "panic_error_0x22", "nodeType": "YulIdentifier", "src": "2296:16:1"}, "nodeType": "YulFunctionCall", "src": "2296:18:1"}, "nodeType": "YulExpressionStatement", "src": "2296:18:1"}]}, "condition": {"arguments": [{"name": "outOfPlaceEncoding", "nodeType": "YulIdentifier", "src": "2246:18:1"}, {"arguments": [{"name": "length", "nodeType": "YulIdentifier", "src": "2269:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2277:2:1", "type": "", "value": "32"}], "functionName": {"name": "lt", "nodeType": "YulIdentifier", "src": "2266:2:1"}, "nodeType": "YulFunctionCall", "src": "2266:14:1"}], "functionName": {"name": "eq", "nodeType": "YulIdentifier", "src": "2243:2:1"}, "nodeType": "YulFunctionCall", "src": "2243:38:1"}, "nodeType": "YulIf", "src": "2240:2:1"}]}, "name": "extract_byte_array_length", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "data", "nodeType": "YulTypedName", "src": "2045:4:1", "type": ""}], "returnVariables": [{"name": "length", "nodeType": "YulTypedName", "src": "2054:6:1", "type": ""}], "src": "2010:320:1"}, {"body": {"nodeType": "YulBlock", "src": "2364:152:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "2381:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2384:77:1", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "2374:6:1"}, "nodeType": "YulFunctionCall", "src": "2374:88:1"}, "nodeType": "YulExpressionStatement", "src": "2374:88:1"}, {"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "2478:1:1", "type": "", "value": "4"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2481:4:1", "type": "", "value": "0x22"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "2471:6:1"}, "nodeType": "YulFunctionCall", "src": "2471:15:1"}, "nodeType": "YulExpressionStatement", "src": "2471:15:1"}, {"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "2502:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2505:4:1", "type": "", "value": "0x24"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "2495:6:1"}, "nodeType": "YulFunctionCall", "src": "2495:15:1"}, "nodeType": "YulExpressionStatement", "src": "2495:15:1"}]}, "name": "panic_error_0x22", "nodeType": "YulFunctionDefinition", "src": "2336:180:1"}, {"body": {"nodeType": "YulBlock", "src": "2550:152:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "2567:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2570:77:1", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "2560:6:1"}, "nodeType": "YulFunctionCall", "src": "2560:88:1"}, "nodeType": "YulExpressionStatement", "src": "2560:88:1"}, {"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "2664:1:1", "type": "", "value": "4"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2667:4:1", "type": "", "value": "0x41"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "2657:6:1"}, "nodeType": "YulFunctionCall", "src": "2657:15:1"}, "nodeType": "YulExpressionStatement", "src": "2657:15:1"}, {"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "2688:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2691:4:1", "type": "", "value": "0x24"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "2681:6:1"}, "nodeType": "YulFunctionCall", "src": "2681:15:1"}, "nodeType": "YulExpressionStatement", "src": "2681:15:1"}]}, "name": "panic_error_0x41", "nodeType": "YulFunctionDefinition", "src": "2522:180:1"}]}, "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n}\n", "id": 1, "language": "Yul", "name": "#utility.yul"}], "linkReferences": {}, "object": "60806040523480156200001157600080fd5b5060405162000c6c38038062000c6c8339818101604052810190620000379190620001f3565b60018190806001815401808255809150506001900390600052602060002001600090919091909150908051906020019062000074929190620000d1565b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190620000c9929190620000d1565b505062000369565b828054620000df90620002d5565b90600052602060002090601f0160209004810192826200010357600085556200014f565b82601f106200011e57805160ff19168380011785556200014f565b828001600101855582156200014f579182015b828111156200014e57825182559160200191906001019062000131565b5b5090506200015e919062000162565b5090565b5b808211156200017d57600081600090555060010162000163565b5090565b60006200019862000192846200026c565b62000238565b905082815260208101848484011115620001b157600080fd5b620001be8482856200029f565b509392505050565b600082601f830112620001d857600080fd5b8151620001ea84826020860162000181565b91505092915050565b6000602082840312156200020657600080fd5b600082015167ffffffffffffffff8111156200022157600080fd5b6200022f84828501620001c6565b91505092915050565b6000604051905081810181811067ffffffffffffffff821117156200026257620002616200033a565b5b8060405250919050565b600067ffffffffffffffff8211156200028a57620002896200033a565b5b601f19601f8301169050602081019050919050565b60005b83811015620002bf578082015181840152602081019050620002a2565b83811115620002cf576000848401525b50505050565b60006002820490506001821680620002ee57607f821691505b602082108114156200030557620003046200030b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108f380620003796000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631c3462c814610051578063320799551461008157806335897cad146100b1578063e51ace16146100cf575b600080fd5b61006b600480360381019061006691906104d7565b6100eb565b6040516100789190610687565b60405180910390f35b61009b60048036038101906100969190610541565b61018b565b6040516100a89190610687565b60405180910390f35b6100b9610237565b6040516100c69190610665565b60405180910390f35b6100e960048036038101906100e49190610500565b610310565b005b6000602052806000526040600020600091509050805461010a906107ee565b80601f0160208091040260200160405190810160405280929190818152602001828054610136906107ee565b80156101835780601f1061015857610100808354040283529160200191610183565b820191906000526020600020905b81548152906001019060200180831161016657829003601f168201915b505050505081565b6001818154811061019b57600080fd5b9060005260206000200160009150905080546101b6906107ee565b80601f01602080910402602001604051908101604052809291908181526020018280546101e2906107ee565b801561022f5780601f106102045761010080835404028352916020019161022f565b820191906000526020600020905b81548152906001019060200180831161021257829003601f168201915b505050505081565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561030757838290600052602060002001805461027a906107ee565b80601f01602080910402602001604051908101604052809291908181526020018280546102a6906107ee565b80156102f35780601f106102c8576101008083540402835291602001916102f3565b820191906000526020600020905b8154815290600101906020018083116102d657829003601f168201915b50505050508152602001906001019061025b565b50505050905090565b60018190806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061034b9291906103a2565b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908051906020019061039e9291906103a2565b5050565b8280546103ae906107ee565b90600052602060002090601f0160209004810192826103d05760008555610417565b82601f106103e957805160ff1916838001178555610417565b82800160010185558215610417579182015b828111156104165782518255916020019190600101906103fb565b5b5090506104249190610428565b5090565b5b80821115610441576000816000905550600101610429565b5090565b6000610458610453846106da565b6106a9565b90508281526020810184848401111561047057600080fd5b61047b8482856107ac565b509392505050565b6000813590506104928161088f565b92915050565b600082601f8301126104a957600080fd5b81356104b9848260208601610445565b91505092915050565b6000813590506104d1816108a6565b92915050565b6000602082840312156104e957600080fd5b60006104f784828501610483565b91505092915050565b60006020828403121561051257600080fd5b600082013567ffffffffffffffff81111561052c57600080fd5b61053884828501610498565b91505092915050565b60006020828403121561055357600080fd5b6000610561848285016104c2565b91505092915050565b600061057683836105f3565b905092915050565b60006105898261071a565b610593818561073d565b9350836020820285016105a58561070a565b8060005b858110156105e157848403895281516105c2858261056a565b94506105cd83610730565b925060208a019950506001810190506105a9565b50829750879550505050505092915050565b60006105fe82610725565b610608818561074e565b93506106188185602086016107bb565b6106218161087e565b840191505092915050565b600061063782610725565b610641818561075f565b93506106518185602086016107bb565b61065a8161087e565b840191505092915050565b6000602082019050818103600083015261067f818461057e565b905092915050565b600060208201905081810360008301526106a1818461062c565b905092915050565b6000604051905081810181811067ffffffffffffffff821117156106d0576106cf61084f565b5b8060405250919050565b600067ffffffffffffffff8211156106f5576106f461084f565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061077b82610782565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156107d95780820151818401526020810190506107be565b838111156107e8576000848401525b50505050565b6000600282049050600182168061080657607f821691505b6020821081141561081a57610819610820565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61089881610770565b81146108a357600080fd5b50565b6108af816107a2565b81146108ba57600080fd5b5056fea26469706673582212202d2e32839657ab2c2b406ebbc88d58f9d511e2e8556372439558436e0d84efac64736f6c63430008000033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xC6C CODESIZE SUB DUP1 PUSH3 0xC6C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F3 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x74 SWAP3 SWAP2 SWAP1 PUSH3 0xD1 JUMP JUMPDEST POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xC9 SWAP3 SWAP2 SWAP1 PUSH3 0xD1 JUMP JUMPDEST POP POP PUSH3 0x369 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xDF SWAP1 PUSH3 0x2D5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x103 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x14F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x11E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x14F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x14F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x14E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x131 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x15E SWAP2 SWAP1 PUSH3 0x162 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x17D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x163 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x198 PUSH3 0x192 DUP5 PUSH3 0x26C JUMP JUMPDEST PUSH3 0x238 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1BE DUP5 DUP3 DUP6 PUSH3 0x29F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x1EA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x181 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x22F DUP5 DUP3 DUP6 ADD PUSH3 0x1C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x262 JUMPI PUSH3 0x261 PUSH3 0x33A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x28A JUMPI PUSH3 0x289 PUSH3 0x33A JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2BF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2A2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2CF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2EE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x305 JUMPI PUSH3 0x304 PUSH3 0x30B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8F3 DUP1 PUSH3 0x379 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1C3462C8 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x32079955 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x35897CAD EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xE51ACE16 EQ PUSH2 0xCF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0xEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x541 JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x500 JUMP JUMPDEST PUSH2 0x310 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x10A SWAP1 PUSH2 0x7EE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x136 SWAP1 PUSH2 0x7EE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x183 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x158 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x183 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x166 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x1B6 SWAP1 PUSH2 0x7EE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E2 SWAP1 PUSH2 0x7EE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x22F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x204 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x22F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x212 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x307 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x27A SWAP1 PUSH2 0x7EE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2A6 SWAP1 PUSH2 0x7EE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x25B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x34B SWAP3 SWAP2 SWAP1 PUSH2 0x3A2 JUMP JUMPDEST POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x39E SWAP3 SWAP2 SWAP1 PUSH2 0x3A2 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x3AE SWAP1 PUSH2 0x7EE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x417 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x3E9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x417 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x417 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x416 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3FB JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x428 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x429 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x458 PUSH2 0x453 DUP5 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x6A9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x47B DUP5 DUP3 DUP6 PUSH2 0x7AC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x492 DUP2 PUSH2 0x88F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4B9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x445 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4D1 DUP2 PUSH2 0x8A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4F7 DUP5 DUP3 DUP6 ADD PUSH2 0x483 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x538 DUP5 DUP3 DUP6 ADD PUSH2 0x498 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x561 DUP5 DUP3 DUP6 ADD PUSH2 0x4C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x576 DUP4 DUP4 PUSH2 0x5F3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x589 DUP3 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x593 DUP2 DUP6 PUSH2 0x73D JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x5A5 DUP6 PUSH2 0x70A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x5E1 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x5C2 DUP6 DUP3 PUSH2 0x56A JUMP JUMPDEST SWAP5 POP PUSH2 0x5CD DUP4 PUSH2 0x730 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5A9 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FE DUP3 PUSH2 0x725 JUMP JUMPDEST PUSH2 0x608 DUP2 DUP6 PUSH2 0x74E JUMP JUMPDEST SWAP4 POP PUSH2 0x618 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x621 DUP2 PUSH2 0x87E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x637 DUP3 PUSH2 0x725 JUMP JUMPDEST PUSH2 0x641 DUP2 DUP6 PUSH2 0x75F JUMP JUMPDEST SWAP4 POP PUSH2 0x651 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x65A DUP2 PUSH2 0x87E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x67F DUP2 DUP5 PUSH2 0x57E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6A1 DUP2 DUP5 PUSH2 0x62C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x6D0 JUMPI PUSH2 0x6CF PUSH2 0x84F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6F5 JUMPI PUSH2 0x6F4 PUSH2 0x84F JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77B DUP3 PUSH2 0x782 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7D9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7BE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x806 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x81A JUMPI PUSH2 0x819 PUSH2 0x820 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x898 DUP2 PUSH2 0x770 JUMP JUMPDEST DUP2 EQ PUSH2 0x8A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8AF DUP2 PUSH2 0x7A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x8BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0x2E ORIGIN DUP4 SWAP7 JUMPI 0xAB 0x2C 0x2B BLOCKHASH PUSH15 0xBBC88D58F9D511E2E8556372439558 NUMBER PUSH15 0xD84EFAC64736F6C63430008000033 ", "sourceMap": "26:483:0:-:0;;;190:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;232:4;242;232:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;284:4;257:12;:24;270:10;257:24;;;;;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;190:105;26:483;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:353:1:-;;121:65;136:49;178:6;136:49;:::i;:::-;121:65;:::i;:::-;112:74;;209:6;202:5;195:21;247:4;240:5;236:16;285:3;276:6;271:3;267:16;264:25;261:2;;;302:1;299;292:12;261:2;315:39;347:6;342:3;337;315:39;:::i;:::-;102:258;;;;;;:::o;380:288::-;;496:3;489:4;481:6;477:17;473:27;463:2;;514:1;511;504:12;463:2;547:6;541:13;572:90;658:3;650:6;643:4;635:6;631:17;572:90;:::i;:::-;563:99;;453:215;;;;;:::o;674:390::-;;803:2;791:9;782:7;778:23;774:32;771:2;;;819:1;816;809:12;771:2;883:1;872:9;868:17;862:24;913:18;905:6;902:30;899:2;;;945:1;942;935:12;899:2;973:74;1039:7;1030:6;1019:9;1015:22;973:74;:::i;:::-;963:84;;833:224;761:303;;;;:::o;1070:283::-;;1136:2;1130:9;1120:19;;1178:4;1170:6;1166:17;1285:6;1273:10;1270:22;1249:18;1237:10;1234:34;1231:62;1228:2;;;1296:18;;:::i;:::-;1228:2;1336:10;1332:2;1325:22;1110:243;;;;:::o;1359:332::-;;1511:18;1503:6;1500:30;1497:2;;;1533:18;;:::i;:::-;1497:2;1618:4;1614:9;1607:4;1599:6;1595:17;1591:33;1583:41;;1679:4;1673;1669:15;1661:23;;1426:265;;;:::o;1697:307::-;1765:1;1775:113;1789:6;1786:1;1783:13;1775:113;;;1874:1;1869:3;1865:11;1859:18;1855:1;1850:3;1846:11;1839:39;1811:2;1808:1;1804:10;1799:15;;1775:113;;;1906:6;1903:1;1900:13;1897:2;;;1986:1;1977:6;1972:3;1968:16;1961:27;1897:2;1746:258;;;;:::o;2010:320::-;;2091:1;2085:4;2081:12;2071:22;;2138:1;2132:4;2128:12;2159:18;2149:2;;2215:4;2207:6;2203:17;2193:27;;2149:2;2277;2269:6;2266:14;2246:18;2243:38;2240:2;;;2296:18;;:::i;:::-;2240:2;2061:269;;;;:::o;2336:180::-;2384:77;2381:1;2374:88;2481:4;2478:1;2471:15;2505:4;2502:1;2495:15;2522:180;2570:77;2567:1;2560:88;2667:4;2664:1;2657:15;2691:4;2688:1;2681:15;26:483:0;;;;;;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_msg\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToMsg\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"msgs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recive\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_msg\",\"type\":\"string\"}],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"global_board.sol\":\"Global_Board\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"global_board.sol\":{\"keccak256\":\"0xc8f3bfcbc9f829ba605affa659daf910ac0305caf63be63f8488d184b997375c\",\"urls\":[\"bzz-raw://daf29e13c039f0b2607932786a807da65abfa1aa48bd265e077ebd9df843eabf\",\"dweb:/ipfs/QmeCjtssYhKK6AndKhnyeXV64ygTfKPtUUHSFCqGoPkRLs\"]}},\"version\":1}"}}}, "errors": [{"component": "general", "errorCode": "1878", "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> global_board.sol\n\n", "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.", "severity": "warning", "sourceLocation": {"end": -1, "file": "global_board.sol", "start": -1}, "type": "Warning"}], "sources": {"global_board.sol": {"id": 0}}}